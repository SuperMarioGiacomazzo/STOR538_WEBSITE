Salary.Data=Salary %>%
group_by(team,season_start) %>%
summarize(total.salary=sum(salary)/1000000) %>%
ungroup() %>%
group_by(season_start) %>%
summarize(n=n(),mean.salary=mean(total.salary),sd.salary=sd(total.salary))
head(Salary.Data)
ggplot(Salary.Data) +
geom_line(aes(x=season_start,y=mean.salary),size=2,color="deepskyblue1") +
ylab("Average Team Salary (in Millions)") +
xlab("NBA Season") +
geom_errorbar(aes(x=season_start,ymin=mean.salary-sd.salary,ymax=mean.salary+sd.salary)) +
ggtitle("Change in NBA Team Salary (Interval Indicates Single Standard Deviation)") +
theme_classic()
View(Salary.Data)
ggplot(Salary.Data) +
geom_line(aes(x=season_start,y=mean.salary),size=2,color="deepskyblue1") +
ylab("Average Team Salary (in Millions)") +
xlab("NBA Season") +
scale_x_discrete(limits=c(1984,2017)) +
geom_errorbar(aes(x=season_start,ymin=mean.salary-sd.salary,ymax=mean.salary+sd.salary)) +
ggtitle("Change in NBA Team Salary (Interval Indicates Single Standard Deviation)") +
theme_classic()
ggplot(Salary.Data) +
geom_line(aes(x=season_start,y=mean.salary),size=2,color="deepskyblue1") +
ylab("Average Team Salary (in Millions)") +
xlab("NBA Season") +
scale_x_discrete(breaks=seq(1984,2017,4)) +
geom_errorbar(aes(x=season_start,ymin=mean.salary-sd.salary,ymax=mean.salary+sd.salary)) +
ggtitle("Change in NBA Team Salary (Interval Indicates Single Standard Deviation)") +
theme_classic()
seq(1984,2017,4)
ggplot(Salary.Data) +
geom_line(aes(x=season_start,y=mean.salary),size=2,color="deepskyblue1") +
ylab("Average Team Salary (in Millions)") +
xlab("NBA Season") +
scale_x_discrete(breaks=seq(1984,2017,4)) +
geom_errorbar(aes(x=season_start,ymin=mean.salary-sd.salary,ymax=mean.salary+sd.salary)) +
ggtitle("Change in NBA Team Salary (Interval Indicates Single Standard Deviation)") +
theme_classic()
ggplot(Salary.Data) +
geom_line(aes(x=season_start,y=mean.salary),size=2,color="deepskyblue1") +
ylab("Average Team Salary (in Millions)") +
xlab("NBA Season") +
scale_x_continuous(breaks=seq(1984,2017,4)) +
geom_errorbar(aes(x=season_start,ymin=mean.salary-sd.salary,ymax=mean.salary+sd.salary)) +
ggtitle("Change in NBA Team Salary (Interval Indicates Single Standard Deviation)") +
theme_classic()
ggplot(Salary.Data) +
geom_line(aes(x=season_start,y=mean.salary),size=2,color="deepskyblue1") +
ylab("Average Team Salary (in Millions)") +
xlab("NBA Season") +
scale_x_continuous(breaks=seq(1984,2017,4)) +
geom_hline(yintercept=mean(Salary.Data$mean.salary)) +
geom_errorbar(aes(x=season_start,ymin=mean.salary-sd.salary,ymax=mean.salary+sd.salary)) +
ggtitle("Change in NBA Team Salary (Interval Indicates Single Standard Deviation)") +
theme_classic()
ggplot(Salary.Data) +
geom_line(aes(x=season_start,y=mean.salary),size=2,color="deepskyblue1") +
ylab("Average Team Salary (in Millions)") +
xlab("NBA Season") +
scale_x_continuous(breaks=seq(1984,2017,4)) +
geom_hline(yintercept=mean(Salary.Data$mean.salary),type=2) +
geom_errorbar(aes(x=season_start,ymin=mean.salary-sd.salary,ymax=mean.salary+sd.salary)) +
ggtitle("Change in NBA Team Salary (Interval Indicates Single Standard Deviation)") +
theme_classic()
ggplot(Salary.Data) +
geom_line(aes(x=season_start,y=mean.salary),size=2,color="deepskyblue1") +
ylab("Average Team Salary (in Millions)") +
xlab("NBA Season") +
scale_x_continuous(breaks=seq(1984,2017,4)) +
geom_hline(yintercept=mean(Salary.Data$mean.salary),style=2) +
geom_errorbar(aes(x=season_start,ymin=mean.salary-sd.salary,ymax=mean.salary+sd.salary)) +
ggtitle("Change in NBA Team Salary (Interval Indicates Single Standard Deviation)") +
theme_classic()
geom_hline?
?geom_hline
?geom_hline
ggplot(Salary.Data) +
geom_line(aes(x=season_start,y=mean.salary),size=2,color="deepskyblue1") +
ylab("Average Team Salary (in Millions)") +
xlab("NBA Season") +
scale_x_continuous(breaks=seq(1984,2017,4)) +
geom_hline(yintercept=mean(Salary.Data$mean.salary),linetype=2) +
geom_errorbar(aes(x=season_start,ymin=mean.salary-sd.salary,ymax=mean.salary+sd.salary)) +
ggtitle("Change in NBA Team Salary (Interval Indicates Single Standard Deviation)") +
theme_classic()
mean(Salary.Data$mean.salary)
View(Salary.Data)
View(Salary)
View(Player)
Games=read_csv("D:/Mario Documents/UNC/STOR 390/STOR390_WEBSITE/Slides/Basketball 4/nba.game.stats.csv")
Games=read_csv("D:/Mario Documents/UNC/STOR 390/STOR390_WEBSITE/Slides/Basketball 4/nba.game.stats.csv")
Games=read_csv("D:/Mario Documents/UNC/STOR 390/STOR390_WEBSITE/Slides/Basketball 4/nba.games.stats.csv")
View(Games)
9840/82
120/30
View(Games)
Games %>%
group_by(Team) %>%
summarize(W.Per=mean(WINorLOSS=="W"))
Games2 = Games %>%
mutate(season=rep(c(1,2,3,4),each=82*30))
View(Games2)
Games2 = Games %>%
mutate(season=rep(c(2014,2015,2016,2017),each=82*30))
group_by(Team) %>%
summarize(W.Per=mean(WINorLOSS=="W"))
Games2
Games2 = Games %>%
mutate(Season=rep(c(2014,2015,2016,2017),each=82*30)) %<%
group_by(Team,Season) %>%
summarize(W.Per=mean(WINorLOSS=="W"))
Games2 = Games %>%
mutate(Season=rep(c(2014,2015,2016,2017),each=82*30)) %>%
group_by(Team,Season) %>%
summarize(W.Per=mean(WINorLOSS=="W"))
View(Games)
View(Games2)
Games2 = Games %>%
mutate(Season=rep(c(2014,2015,2016,2017),each=82*30)) %>%
group_by(Team,Season) %>%
summarize(Wins=sum(WINorLOSS=="W"))
View(Games2)
Games2 = Games %>%
mutate(Season=rep(c(2014,2015,2016,2017),each=82*30)) %>%
group_by(Team,Season) %>%
summarize(Wins=sum(WINorLOSS=="W"),
Scored=sum(TeamPoints),
Allowed=sum(OpponentPoints))
View(Games2)
pythag.func=function(data,par){
(data$Wins-((data$Scored/data$Allowed)^par[1])/((data$Scored/data$Allowed)^par[1]+1))^2
}
optim(par=c(10),pythag.func.data=Games2)$par[1]
pythag.func=function(data,par){
(data$Wins-((data$Scored/data$Allowed)^par[1])/((data$Scored/data$Allowed)^par[1]+1))^2
}
result=optim(par=c(10),fn=pythag.func,data=Games2)$par[1]
result
optim(par=c(10),fn=pythag.func,data=Games2)$par[1]
Games2 = Games %>%
mutate(Season=rep(c(2014,2015,2016,2017),each=82*30)) %>%
group_by(Team,Season) %>%
summarize(Wins=sum(WINorLOSS=="W"),
Scored=sum(TeamPoints),
Allowed=sum(OpponentPoints))
pythag.func=function(data,par){
(data$Wins-((data$Scored/data$Allowed)^par[1])/((data$Scored/data$Allowed)^par[1]+1))^2
}
result=optim(par=c(10),fn=pythag.func,data=Games2)$par[1]
pythag.func=function(data,par){
sum((data$Wins-((data$Scored/data$Allowed)^par[1])/((data$Scored/data$Allowed)^par[1]+1))^2)
}
result=optim(par=c(10),fn=pythag.func,data=Games2)$par[1]
result
pythag.func=function(data,par){
sqrt(mean((data$Wins-((data$Scored/data$Allowed)^par[1])/((data$Scored/data$Allowed)^par[1]+1))^2))
}
result=optim(par=c(10),fn=pythag.func,data=Games2)$par[1]
result
result=optim(par=c(10),fn=pythag.func,data=Games2)
result$par
Games2 = Games %>%
mutate(Season=rep(c(2014,2015,2016,2017),each=82*30)) %>%
group_by(Team,Season) %>%
summarize(Wins=sum(WINorLOSS=="W"),
Scored=mean(TeamPoints),
Allowed=mean(OpponentPoints))
View(Games2)
pythag.func=function(data,par){
sqrt(mean((data$Wins-((data$Scored/data$Allowed)^par[1])/((data$Scored/data$Allowed)^par[1]+1))^2))
}
result=optim(par=c(10),fn=pythag.func,data=Games2)$par[1]
result
optim(par=c(10),fn=pythag.func,data=Games2)$par[1]
optim(par=c(10),fn=pythag.func,data=Games2)$par[1]
Games2 = Games %>%
mutate(Season=rep(c(2014,2015,2016,2017),each=82*30)) %>%
group_by(Team,Season) %>%
summarize(Wins=sum(WINorLOSS=="W"),
Scored=mean(TeamPoints),
Allowed=mean(OpponentPoints))
pythag.func=function(data,par){
x=(data$Wins-((data$Scored/data$Allowed)^par[1])/((data$Scored/data$Allowed)^par[1]+1))^2
sum(x)
}
result=optim(par=c(10),fn=pythag.func,data=Games2)$par[1]
result
optim(par=c(10),fn=pythag.func,data=Games2)$par[1]
optim(par=c(10),fn=pythag.func,data=Games2)
optim(par=c(13),fn=pythag.func,data=Games2)
View(Games2)
optim(par=c(13),fn=pythag.func,data=Games2)$par[1]
optim(par=c(13),fn=pythag.func,data=Games2,method="Brent")
optim(par=c(13),fn=pythag.func,data=Games2,method="Brent")$par[1]
optim(par=c(13),fn=pythag.func,data=Games2,method="Brent",lower=0,upper=100)$par[1]
optim(par=c(13),fn=pythag.func,data=Games2,method="Brent",lower=0,upper=10000)$par[1]
warnings()
View(Games2)
pythag.func=function(data,par){
R=data$Scored/data$Allowed
y=data$Wins
resid=y-R^(par[1])/(R^par[1]+1)
return(sum(resid^2))
}
result=optim(par=c(13),fn=pythag.func,data=Games2,method="Brent",lower=0,upper=10000)$par[1]
result
pythag.func=function(data,par){
R=data$Scored/data$Allowed
y=data$Wins
resid=y-(R^(par[1]))/(R^(par[1])+1)
return(sum(resid^2))
}
result=optim(par=c(13),fn=pythag.func,data=Games2,method="Brent",lower=0,upper=10000)$par[1]
optim(par=c(13),fn=pythag.func,data=Games2,method="BFGS",lower=0,upper=10000)$par[1]
optim(par=c(13),fn=pythag.func,data=Games2,method="BFGS")$par[1
]
optim(par=c(13),fn=pythag.func,data=Games2,method="BFGS")$par[1]
Games2 = Games %>%
mutate(Season=rep(c(2014,2015,2016,2017),each=82*30)) %>%
group_by(Team,Season) %>%
summarize(Win.Per=mean(WINorLOSS=="W"),
Scored=mean(TeamPoints),
Allowed=mean(OpponentPoints))
pythag.func=function(data,par){
R=data$Scored/data$Allowed
y=data$Win.Per
resid=y-(R^(par[1]))/(R^(par[1])+1)
return(sum(resid^2))
}
result=optim(par=c(13),fn=pythag.func,data=Games2,method="BFGS")$par[1]
result
print(result)
#Pythagorean Theorem for Wins
head(Games)
#Pythagorean Theorem for Wins
head(Games[,2:9])
Games2 = Games %>%
mutate(Season=rep(c(2014,2015,2016,2017),each=82*30)) %>%
group_by(Team,Season) %>%
summarize(Win.Per=mean(WINorLOSS=="W"),
Scored=mean(TeamPoints),
Allowed=mean(OpponentPoints))
head(Games2)
print(result$par[1])
pythag.func=function(data,par){
R=data$Scored/data$Allowed
y=data$Win.Per
resid=y-(R^(par[1]))/(R^(par[1])+1)
return(sum(resid^2))
}
result=optim(par=c(13),fn=pythag.func,data=Games2,method="BFGS")
print(result$par[1])
#Investigation of Salary
head(Salary)
head(Salary.Data)
4*99*30
-0.05*-1.75-0.95*-5.25
-0.05*1.75-0.1*-1.75-0.85*-5.25
library(readxl)
data=read_xlsx("D:/Mario Documents/UNC/STOR 390/Not for Github/FA2019_PRACTICE/STOR_390_001_SIGN.xlsx")
sample(x=as.vector(data$`Student Name`),size=1)
library(readxl)
data=read_xlsx("D:/Mario Documents/UNC/STOR 390/Not for Github/FA2019_PRACTICE/STOR_390_001_SIGN.xlsx")
sample(x=as.vector(data$`Student Name`),size=1)
url="https://en.wikipedia.org/wiki/2019_Atlantic_Coast_Conference_football_season"
library(tidyverse)
library(rvest)
url="https://en.wikipedia.org/wiki/2019_Atlantic_Coast_Conference_football_season"
out=url %>%
read_html() %>%
html_table()
library(tidyverse)
library(rvest)
url="https://en.wikipedia.org/wiki/2019_Atlantic_Coast_Conference_football_season"
out=url %>%
read_html() %>%
html_table(fill=T)
library(tidyverse)
library(rvest)
url="https://en.wikipedia.org/wiki/2019_Atlantic_Coast_Conference_football_season"
out=url %>%
read_html() %>%
html_table(fill=T)
url %>%
read_html()
out=url %>%
read_html() %>%
html_table(fill=T)
library(tidyverse)
library(rvest)
url="https://en.wikipedia.org/wiki/2019_Atlantic_Coast_Conference_football_season"
out=url %>%
read_html() %>%
html_table(fill=T)
out = url %>%
read_html() %>%
html_table(fill=T)
out = url %>%
read_html(fill=T) %>%
html_table(fill=T)
out = url %>%
read_html(fill=T) %>%
html_table()
out = url %>%
read_html() %>%
html_table(fill=T)
url %>%
read_html() %>%
html_nodes(css=".wikitable tbody:nth-child(1) td , .wikitable abbr, .wikitable tbody:nth-child(1) th")
out = url %>%
read_html() %>%
html_nodes(css=".wikitable tbody:nth-child(1) td , .wikitable abbr, .wikitable tbody:nth-child(1) th")
View(out)
out = url %>%
read_html() %>%
html_nodes(css=".wikitable tbody:nth-child(1) td , .wikitable abbr, .wikitable tbody:nth-child(1) th") %>%
html_table(fill=T)
out[[2]]
out[[2]][[1]]
out[[3]]
out[[12]]
out = url %>%
read_html() %>%
html_nodes(css=".wikitable") %>%
html_table(fill=T)
out[[1]]
out[[2]]
out[[3]]
out[[15]]
out[[17]]
out[[18]]
table=out[[18]]
View(table)
table=out[[19]]
out[[19]]
View(table)
table=out[[25]]
table=out[[20]]
table=out[[25]]
View(table)
table=out[[26]]
View(table)
table=out[[26]]
View(table)
table=out[[32]]
View(table)
table=out[[30]]
View(table)
table=out[[30]][-7,]
View(table)
View(table)
table=out[[30]][-7,c(1,4,3)]
View(table)
table=rbind(out[[30]][-7,c(1,4,3)],out[[32]][-7,c(1,4,3)],out[[34]][-7,c(1,4,3)])
View(table)
out[[32]][-7,c(1,4,3)]
out[[34]][-7,c(1,4,3)]
table=rbind(out[[30]][-7,c(1,4,3)],out[[32]][-9,c(1,4,3)],out[[34]][-10,c(1,4,3)])
View(table)
table=rbind(out[[30]][-c(1,7),c(1,4,3)],out[[32]][-9,c(1,4,3)],out[[34]][-10,c(1,4,3)])
View(table)
table=rbind(out[[30]][-c(1,7),c(1,4,3)],out[[32]][-9,c(1,4,3)],out[[34]][-10,c(1,4,3)]) %>%
rename("Home Team"="Home team")
library(tidyverse)
library(rvest)
url="https://en.wikipedia.org/wiki/2019_Atlantic_Coast_Conference_football_season"
out = url %>%
read_html() %>%
html_nodes(css=".wikitable") %>%
html_table(fill=T)
table=rbind(out[[30]][-c(1,7),c(1,4,3)],out[[32]][-9,c(1,4,3)],out[[34]][-10,c(1,4,3)]) %>%
rename("Home Team"="Home team","Visitor Team"="Visiting team")
View(table)
table=rbind(out[[30]][-c(1,7),c(1,4,3)],out[[32]][-9,c(1,4,3)],out[[34]][-10,c(1,4,3)]) %>%
rename("Home Team"="Home team","Visitor Team"="Visiting team") %>%
mutate(Date=as.Date(Date,format="Month D"))
predictions = rbind(out[[30]][-c(1,7),c(1,4,3)],out[[32]][-9,c(1,4,3)],out[[34]][-10,c(1,4,3)]) %>%
rename("Home Team"="Home team","Visitor Team"="Visiting team") %>%
mutate(Date=as.Date(Date,format="Month D"))
View(predictions)
predictions = rbind(out[[30]][-c(1,7),c(1,4,3)],out[[32]][-9,c(1,4,3)],out[[34]][-10,c(1,4,3)]) %>%
rename("Home Team"="Home team","Visitor Team"="Visiting team") %>%
mutate(Date=as.Date(Date))
rbind(out[[30]][-c(1,7),c(1,4,3)],out[[32]][-9,c(1,4,3)],out[[34]][-10,c(1,4,3)]) %>%
rename("Home Team"="Home team","Visitor Team"="Visiting team") %>%
mutate(Date=as.Date(Date, format="Month D"))
rbind(out[[30]][-c(1,7),c(1,4,3)],out[[32]][-9,c(1,4,3)],out[[34]][-10,c(1,4,3)]) %>%
rename("Home Team"="Home team","Visitor Team"="Visiting team")
predictions = rbind(out[[30]][-c(1,7),c(1,4,3)],out[[32]][-9,c(1,4,3)],out[[34]][-10,c(1,4,3)]) %>%
rename("Home Team"="Home team","Visitor Team"="Visiting team") %>%
mutate(Date=as.Date(Date, format="%B %d"))
View(predictions)
library(tidyverse)
library(rvest)
url="https://en.wikipedia.org/wiki/2019_Atlantic_Coast_Conference_football_season"
out = url %>%
read_html() %>%
html_nodes(css=".wikitable") %>%
html_table(fill=T)
predictions = rbind(out[[30]][-c(1,7),c(1,4,3)],out[[32]][-9,c(1,4,3)],out[[34]][-10,c(1,4,3)]) %>%
rename("Home Team"="Home team","Visitor Team"="Visiting team") %>%
mutate(Date=as.Date(Date, format="%B %d")) %>%
mutate(Spread=NA,Total Points=NA,Result=NA)
predictions = rbind(out[[30]][-c(1,7),c(1,4,3)],out[[32]][-9,c(1,4,3)],out[[34]][-10,c(1,4,3)]) %>%
rename("Home Team"="Home team","Visitor Team"="Visiting team") %>%
mutate(Date=as.Date(Date, format="%B %d")) %>%
mutate(Spread=NA,Total=NA,Result=NA)
read_csv(predictions,"Predictions.csv")
library(tidyverse)
library(rvest)
url="https://en.wikipedia.org/wiki/2019_Atlantic_Coast_Conference_football_season"
out = url %>%
read_html() %>%
html_nodes(css=".wikitable") %>%
html_table(fill=T)
predictions = rbind(out[[30]][-c(1,7),c(1,4,3)],out[[32]][-9,c(1,4,3)],out[[34]][-10,c(1,4,3)]) %>%
rename("Home Team"="Home team","Visitor Team"="Visiting team") %>%
mutate(Date=as.Date(Date, format="%B %d")) %>%
mutate(Spread=NA,Total=NA,Result=NA)
write_csv(predictions,"Predictions.csv")
3*16
-15*0.75+10
5*0.75
-15*0.25+10
5*0.25
5/7.5
(2/3)/(2/3+1)
0.224/(1-(1-0.224)*(1-0.364))
30*10/11
10*10/11+10
11/10
10/11
100*10/11
110*10/11
11*10/11
.015*.985+.985*.015+.015*.015
.015*.985+(1-.985)*.015+.015*.015
1-.015
.015*(1-.985)+.985*.015+.015^2
.015*(.985)+.985*.015+.015^2
0.498436+0.458048
.015*.015+.015*.985+.985*.015
1-.279
0.706*0.706
a=.706*.706
b=.015*.015+.015*.985+.985*.015
c=.279*.279+.279*.721+.721*.279
c
a+b+c
a
b
c
.706+.015+.279
1-.279
.706*100+.015*0+.279*130
.706*100+.015*0-.279*130
a
b
b
.015^2+2*.015*.985
c
a
b
c
a+b+c
.4984+.0298+.4802
a
a*100+b*0+c*-130
0.25/0.75
0.75/0.25
3/2.6
2.6/3
3-2.6
0.4/3
0.95/0.05
95/5
0.5*0.95
0.5*0.9
0.45/(1-0.45)
(1-0.45)/0.45
45/9
55/5
45/5
0.55/0.45
100/220
100/110
1/0.91+((0.91-1)/0.91)*0.6
1/1+((1-1.1)/1)*0.6
1/1+((1-1.1)/1.1)*0.6
(0.6*1-0.4*1.1)/(1.1)
1/1.1
(0.6*0.91-0.4*1)/0.91
(0.6*0.9090909-0.4*1)/0.9090909
(0.6*1/1.1-0.4*1)/(1/1.1)
0.6/1.1+0.4/1
0.6/1.1-0.4/1
1/1+(1/1.1+1)*0.6
-1/1+(1/1.1+1)*0.6
-1/0.909+(1/1+1/0.909)*0.6
(0.6*0.909-0.4*1)/(0.909*1)
(0.48*0.909-0.52*1)/(0.909*1)
(0.95*0.909-0.05*1)/(0.909*1)
(0.95*1-0.05*1.1)/1.1
0.6*log(1+0.05*0.909)+0.4*log(1-0.05*1)
0.6*log(1+0.3*0.909)+0.4*log(1-0.3*1)
0.6*log(1+0.3*0.909)+0.4*log(1-0.4*1)
0.6*log(1+0.3*0.909)+0.4*log(1-0.32*1)
0.6*log(1+0.45*0.909)+0.4*log(1-0.45*1)
0.6*log(1+0.45*1)+0.4*log(1-0.45*1.1)
0.6*log(1+0.3*1)+0.4*log(1-0.3*1.1)
