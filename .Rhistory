gather(`1990`:`2019`,key="Year",value="Ed.Index",convert=T) %>%
arrange(Country)
head(EDU) #DO NOT CHANGE
EDU2 = EDU %>%
group_by(Country) %>%
filter(Year>1999) %>%
summarize(AVG.EDU=mean(Ed.Index),SD.EDU=sd(Ed.Index)) %>%
na.omit()
head(EDU2,20)  #DO NOT CHANGE
EDU %>%
group_by(Country) %>%
filter(Year>1999) %>%
summarize(AVG.EDU=mean(Ed.Index),SD.EDU=sd(Ed.Index)) %>%
filter(is.na(AVG.EDU)) %>%
nrow()
anti_join(EDU2,GDP7,by="Country")
EDU %>%
group_by(Country) %>%
filter(Year>1999) %>%
summarize(AVG.EDU=mean(Ed.Index),SD.EDU=sd(Ed.Index)) %>%
filter(is.na(AVG.EDU)) %>%
nrow()
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999)
library(tidyverse)
library(rvest)
library(curl) #Make sure you install this package if you don't have it.
URL.GDP="https://www.worldometers.info/gdp/gdp-by-country/" #DO NOT CHANGE
GDP = URL.GDP %>%
read_html() %>%
html_table(fill=TRUE) %>%
.[[1]]
head(GDP) #DO NOT CHANGE
GDP2=GDP[,-c(1,4)]
head(GDP2) #DO NOT CHANGE
GDP3=GDP2 %>% rename(GDP = `GDP (nominal, 2022)`,
Growth = `GDP  growth`,
Population = `Population (2022)`,
PerCapita = `GDP  per capita`,
Share = `Share of World GDP`)
names(GDP3) #DO NOT CHANGE
GDP4=GDP3 %>%
mutate(GDP=str_replace(GDP,"\\$",""),
Growth=str_replace(Growth,"%",""),
PerCapita=str_replace(PerCapita,"\\$",""),
Share=str_replace(Share,"%",""))
str(GDP4) #DO NOT CHANGE
GDP5=GDP4 %>%
mutate(GDP=str_replace_all(GDP,",",""),
Population=str_replace_all(Population,",",""),
PerCapita=str_replace_all(PerCapita,",",""))
str(GDP5) #DO NOT CHANGE
# Make all variables except Country numeric
GDP6=GDP5 %>%
mutate_at(2:6,as.numeric)
str(GDP6) #DO NOT CHANGE
GDP7=GDP6%>%
mutate(GDP=GDP/1000000000000,
Population=Population/1000000)
str(GDP7)  #DO NOT CHANGE
URL.EDU="https://en.wikipedia.org/wiki/Education_Index" #DO NOT CHANGE
EDU = URL.EDU %>%
read_html() %>%
html_table(fill=TRUE) %>%
.[[1]] %>%
gather(`1990`:`2019`,key="Year",value="Ed.Index",convert=T) %>%
arrange(Country)
head(EDU) #DO NOT CHANGE
EDU2 = EDU %>%
group_by(Country) %>%
filter(Year>1999) %>%
summarize(AVG.EDU=mean(Ed.Index),SD.EDU=sd(Ed.Index)) %>%
na.omit()
head(EDU2,20)  #DO NOT CHANGE
EDU %>%
group_by(Country) %>%
filter(Year>1999) %>%
summarize(AVG.EDU=mean(Ed.Index),SD.EDU=sd(Ed.Index)) %>%
filter(is.na(AVG.EDU)) %>%
nrow()
anti_join(EDU2,GDP7,by="Country")
EDU3 = EDU2 %>%
mutate(Country = ifelse(Country=="Bolivia (Plurinational State of)","Bolivia",Country)) %>%
mutate(Country = ifelse(Country=="Congo (Democratic Republic of the)","DR Congo",Country)) %>%
mutate(Country = ifelse(Country=="Czechia","Czech Republic (Czechia)",Country)) %>%
mutate(Country = ifelse(Country=="Iran (Islamic Republic of)","Iran",Country)) %>%
mutate(Country = ifelse(Country=="Korea (Republic of)","South Korea",Country)) %>%
mutate(Country = ifelse(Country=="Russian Federation","Russia",Country)) %>%
mutate(Country = ifelse(Country=="Viet Nam","Vietnam",Country))
filter(EDU3, Country %in% c("Bolivia","DR Congo","Czech Republic (Czechia)", #DO NOT CHANGE
"Iran","South Korea","Russia","Vietnam")) #DO NOT CHANGE
HEALTH2 = HEALTH %>%
mutate(Location=str_replace(Location,"\\*","")) %>%
rename(Country="Location")
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999)
library(tidyverse)
library(rvest)
library(curl) #Make sure you install this package if you don't have it.
URL.GDP="https://www.worldometers.info/gdp/gdp-by-country/" #DO NOT CHANGE
GDP = URL.GDP %>%
read_html() %>%
html_table(fill=TRUE) %>%
.[[1]]
head(GDP) #DO NOT CHANGE
GDP2=GDP[,-c(1,4)]
head(GDP2) #DO NOT CHANGE
GDP3=GDP2 %>% rename(GDP = `GDP (nominal, 2022)`,
Growth = `GDP  growth`,
Population = `Population (2022)`,
PerCapita = `GDP  per capita`,
Share = `Share of World GDP`)
names(GDP3) #DO NOT CHANGE
GDP4=GDP3 %>%
mutate(GDP=str_replace(GDP,"\\$",""),
Growth=str_replace(Growth,"%",""),
PerCapita=str_replace(PerCapita,"\\$",""),
Share=str_replace(Share,"%",""))
str(GDP4) #DO NOT CHANGE
GDP5=GDP4 %>%
mutate(GDP=str_replace_all(GDP,",",""),
Population=str_replace_all(Population,",",""),
PerCapita=str_replace_all(PerCapita,",",""))
str(GDP5) #DO NOT CHANGE
# Make all variables except Country numeric
GDP6=GDP5 %>%
mutate_at(2:6,as.numeric)
str(GDP6) #DO NOT CHANGE
GDP7=GDP6%>%
mutate(GDP=GDP/1000000000000,
Population=Population/1000000)
str(GDP7)  #DO NOT CHANGE
URL.EDU="https://en.wikipedia.org/wiki/Education_Index" #DO NOT CHANGE
EDU = URL.EDU %>%
read_html() %>%
html_table(fill=TRUE) %>%
.[[1]] %>%
gather(`1990`:`2019`,key="Year",value="Ed.Index",convert=T) %>%
arrange(Country)
head(EDU) #DO NOT CHANGE
EDU2 = EDU %>%
group_by(Country) %>%
filter(Year>1999) %>%
summarize(AVG.EDU=mean(Ed.Index),SD.EDU=sd(Ed.Index)) %>%
na.omit()
head(EDU2,20)  #DO NOT CHANGE
EDU %>%
group_by(Country) %>%
filter(Year>1999) %>%
summarize(AVG.EDU=mean(Ed.Index),SD.EDU=sd(Ed.Index)) %>%
filter(is.na(AVG.EDU)) %>%
nrow()
anti_join(EDU2,GDP7,by="Country")
EDU3 = EDU2 %>%
mutate(Country = ifelse(Country=="Bolivia (Plurinational State of)","Bolivia",Country)) %>%
mutate(Country = ifelse(Country=="Congo (Democratic Republic of the)","DR Congo",Country)) %>%
mutate(Country = ifelse(Country=="Czechia","Czech Republic (Czechia)",Country)) %>%
mutate(Country = ifelse(Country=="Iran (Islamic Republic of)","Iran",Country)) %>%
mutate(Country = ifelse(Country=="Korea (Republic of)","South Korea",Country)) %>%
mutate(Country = ifelse(Country=="Russian Federation","Russia",Country)) %>%
mutate(Country = ifelse(Country=="Viet Nam","Vietnam",Country))
filter(EDU3, Country %in% c("Bolivia","DR Congo","Czech Republic (Czechia)", #DO NOT CHANGE
"Iran","South Korea","Russia","Vietnam")) #DO NOT CHANGE
URL.HEALTH="https://en.wikipedia.org/wiki/List_of_countries_by_total_health_expenditure_per_capita" #DO NOT CHANGE
HEALTH = URL.HEALTH %>%
read_html() %>%
html_table(fill=TRUE) %>%
.[[2]] %>%
mutate(`2018`=as.numeric(str_replace_all(`2018`,",","")),
`2019`=as.numeric(str_replace_all(`2019`,",","")),
`2020`=as.numeric(str_replace_all(`2020`,",","")),
`2021`=as.numeric(str_replace_all(`2021`,",","")),
Health.Change=`2020`-`2018`) %>%
select(-c(2,3,4,5)) %>%
na.omit()
str(HEALTH) #DO NOT CHANGE
HEALTH2 = HEALTH %>%
mutate(Location=str_replace(Location,"\\*","")) %>%
rename(Country="Location")
str(HEALTH2) #DO NOT CHANGE
#Use this code chunk to inspect why there is a problem
inner_join(GDP7,HEALTH2)
#Use this code chunk to inspect why there is a problem
inner_join(GDP7,HEALTH2)
options(scipen=9999)
library(tidyverse)
#Import Game Data
GameData=read_csv("D:/Mario Documents/UNC/STOR 538/STOR538_WEBSITE/Slides/Basketball 2/GameData.csv")
head(GameData)
#Modifed Data
GameData2 = cbind(GameData[,1:2],matrix(NA,20,18))
names(GameData2)[3:20]=paste("Player",1:18,sep="")
for(j in 1:20){
for(k in 1:18)
GameData2[j,k+2]= as.numeric(k %in% GameData[j,3:12])
}
GameData2[,12:20]=-GameData2[,12:20]
Games.Played=abs(colSums(GameData2[,3:20]))
GameData2b=GameData2
#Added Constraint to Data (Sum of Effects = 0)
GameData2[21,]=c(NA,0,rep(1,18))
GameData2b[21,]=c(NA,0,Games.Played)
#Create Matrix A
A=as.matrix(GameData2[,3:20])
Ab=as.matrix(GameData2b[,3:20])
#Create Vector y
y=as.matrix(GameData2[,2])
yb=as.matrix(GameData2b[,2])
b=solve(t(A)%*%A)%*%t(A)%*%y
mean(b)
bb=solve(t(Ab)%*%Ab)%*%t(Ab)%*%y
mean(bb)
mean(b)
mean(bb)
GameData2
View(A)
b=solve(t(A)%*%A)%*%t(A)%*%y
mean(b)
bb=solve(t(Ab)%*%Ab)%*%t(Ab)%*%y
mean(bb)
View(b)
View(bb)
GameData
View(GameData)
GameData2
View(GameData2)
install.packages("NBAloveR")
library(nbastatR)
library(tidyverse)
warnings()
Sys.setenv("VROOM_CONNECTION_SIZE" = 131072 * 2)
nba_teams(league="NBA")
TEAM=nba_teams(league="NBA")
View(TEAM)
TEAM=nba_teams(league="NBA") %>%
filter(yearPlayedLast==2023,idLeague==2)
View(TEAM)
TEAM=nba_teams(league="NBA") %>%
filter(yearPlayedLast==2023,idLeague==2) %>%
select(nameTeam,idTeam,slugTeam)
View(TEAM)
GAME2024=game_logs(
seasons = 2024,
league = "NBA",
result_types = "team",
season_types = "Regular Season",
nest_data = F,
assign_to_environment = TRUE,
return_message = TRUE
)
View(GAME2024)
View(GAME2024)
filter(GAME2024,idGame==22300062) %>%
select(idGame,nameTeam,locationGame,orebTeam,ptsTeam)
HOME=GAME %>% filter(locationGame=="H") %>% select(-locationGame)
AWAY=GAME %>% filter(locationGame=="A") %>% select(-locationGame)
GAME=filter(GAME2024,idGame==22300062) %>%
select(idGame,nameTeam,locationGame,orebTeam,ptsTeam)
#Split Data Up Into Home and Away
HOME=GAME %>% filter(locationGame=="H") %>% select(-locationGame)
AWAY=GAME %>% filter(locationGame=="A") %>% select(-locationGame
View(HOME)
View(HOME)
HOME2 = HOME %>% rename(Home=nameTeam,OREB_H=orebTeam,PTS_H=ptsTeam)
AWAY2 = AWAY %>% rename(Away=nameTeam,OREB_A=orebTeam,PTS_A=ptsTeam)
HOME=GAME %>% filter(locationGame=="H") %>% select(-locationGame)
AWAY=GAME %>% filter(locationGame=="A") %>% select(-locationGame)
#Rename Variables
HOME2 = HOME %>% rename(Home=nameTeam,OREB_H=orebTeam,PTS_H=ptsTeam)
AWAY2 = AWAY %>% rename(Away=nameTeam,OREB_A=orebTeam,PTS_A=ptsTeam)
View(HOME2)
full_join(HOME2,AWAY2, by=c("idGame"))
mutate(Spread=PTS_H-PTS_A,
Total=PTS_H+PTS_A,
OREB=OREB_H+OREB_A) %>%
select(idGame,Away,Home,Spread,Total,OREB,everything())
full_join(HOME2,AWAY2, by=c("idGame")) %>%
mutate(Spread=PTS_H-PTS_A,
Total=PTS_H+PTS_A,
OREB=OREB_H+OREB_A) %>%
select(idGame,Away,Home,Spread,Total,OREB,everything())
BOX2024=unnest(box_scores(game_ids=c(22300062),
box_score_types="Advanced",
result_types="team"
))
View(BOX2024)
82-8.7
library(nbastatR)
devtools::install_github("abresler/nbastatR", force=T)
library(nbastatR)
library(tidyverse)
nba_teams(league="NBA") %>%
filter(yearPlayedLast==2024,idLeague==2) %>%
select(nameTeam,idTeam,slugTeam)
Sys.setenv("VROOM_CONNECTION_SIZE" = 131072 * 2)
TEAM=nba_teams(league="NBA") %>%
filter(yearPlayedLast==2024,idLeague==2) %>%
select(nameTeam,idTeam,slugTeam)
View(TEAM)
GAME2024=game_logs(
seasons = 2025,
league = "NBA",
result_types = "team",
season_types = "Regular Season",
nest_data = F,
assign_to_environment = TRUE,
return_message = TRUE
)
View(GAME2024)
View(GAME2024)
GAME=filter(GAME2024,idGame==22400062) %>%
select(idGame,nameTeam,locationGame,orebTeam,ptsTeam)
View(GAME)
HOME=GAME %>% filter(locationGame=="H") %>% select(-locationGame)
AWAY=GAME %>% filter(locationGame=="A") %>% select(-locationGame)
HOME=GAME %>% filter(locationGame=="H") %>% select(-locationGame)
AWAY=GAME %>% filter(locationGame=="A") %>% select(-locationGame)
View(HOME)
COMBINED = full_join(HOME2,AWAY2, by=c("idGame")) %>%
mutate(Spread=PTS_H-PTS_A,
Total=PTS_H+PTS_A,
OREB=OREB_H+OREB_A) %>%
select(idGame,Away,Home,Spread,Total,OREB,everything())
COMBINED = full_join(HOME2,AWAY2, by=c("idGame")) %>%
mutate(Spread=PTS_H-PTS_A,
Total=PTS_H+PTS_A,
OREB=OREB_H+OREB_A) %>%
select(idGame,Away,Home,Spread,Total,OREB,everything())
#Rename Variables
HOME2 = HOME %>% rename(Home=nameTeam,OREB_H=orebTeam,PTS_H=ptsTeam)
AWAY2 = AWAY %>% rename(Away=nameTeam,OREB_A=orebTeam,PTS_A=ptsTeam)
COMBINED = full_join(HOME2,AWAY2, by=c("idGame")) %>%
mutate(Spread=PTS_H-PTS_A,
Total=PTS_H+PTS_A,
OREB=OREB_H+OREB_A) %>%
select(idGame,Away,Home,Spread,Total,OREB,everything())
View(COMBINED)
BOX2025=unnest(box_scores(game_ids=c(22400062),
box_score_types="Advanced",
result_types="team"
))
View(BOX2025)
knitr::opts_chunk$set(echo = TRUE,warning=F)
options(scipen=999)
library(tidyverse)    #Essential Functions
library(Ecdat)        #Contains Economic Datasets
knitr::opts_chunk$set(echo = TRUE,warning=F)
options(scipen=999)
library(tidyverse)    #Essential Functions
library(Ecdat)        #Contains Economic Datasets
x = 3
if(x > 0){
print(log(x))
}
x = -3
if(x > 0){
print(log(x))
}
x > 0
x = 3
if(x > 0){
print(log(x))
}
x = -3
if(x > 0){
print(log(x))
}
log(3)
log(-3)
x = 3
if(x > 0){
print(log(x))
} else{
message("Unable to Take Logarithm")
}
x = -3
if(x > 0){
print(log(x))
} else {
message("Unable to Take Logarithm")
}
x = 3
if(x > 0){
print(log(x))
} else{
message("Unable to Take Logarithm")
}
x = -3
if(x > 0){
print(log(x))
} else {
message("Unable to Take Logarithm")
}
x = -3
if(x > 0){
print(log(x))
}
x = -3
if(x > 0){
print(log(x))
} else {
message("Unable to Take Logarithm")
}
x = "a"
if(x > 0){
print(log(x))
}
x = "a"
x > 0
x = "a"
if(x > 0){
print(log(x))
}
x = list(6,3)
log(x)
x = c(6,3)
log(x)
x = NA
x > 0
if(x > 0){
print(log(x))
}
log(c(3,5,NA))
x = NA
if(x > 0){
print(log(x))
}
is.numeric(x)
x="BLANK"
is.numeric(x)
if(is.numeric(x)){
if(x > 0){
print(log(x))
} else{
message("Unable to Take Logarithm")
}
} else{
message("No Strings Attached")
}
x=3
if(is.numeric(x)){
if(x > 0){
print(log(x))
} else{
message("Unable to Take Logarithm")
}
} else{
message("No Strings Attached")
}
is.numeric(x)
x > 0
if(is.numeric(x)){
if(x > 0){
print(log(x))
} else{
message("Unable to Take Logarithm")
}
} else{
message("No Strings Attached")
}
x=NA
if(is.numeric(x)){
if(x > 0){
print(log(x))
} else{
message("Unable to Take Logarithm")
}
} else{
message("No Strings Attached")
}
x > 0
is.numeric(x)
is.na(x)
x=c(-1,3,200)
print(log(x))
x > 0
y1 =  if(x > 0){
log(x)
} else{
NA
}
x=c(3,-3,200)
print(log(x))
y1 =  if(x > 0){
log(x)
} else{
NA
}
y1 =  if(x > 0){
log(x)
} else{
NA
}
x>0
y2 = ifelse(x>0,log(x),NA)
print(y2)
print(log(x))
print(y2)
rnorm(1000,mean=0,sd=1)
x=rnorm(1000,mean=0,sd=1)
y=ifelse(abs(x)<1,"Within 1 SD",ifelse(abs(x)>2,"Far Far Away","Between 1 and 2 SD"))
y.fct=factor(y,levels=c("Within 1 SD","Between 1 and 2 SD","Far Far Away"))
ggplot() +
geom_bar(aes(x=y.fct),fill="lightskyblue1") +
theme_minimal()
y
x=rnorm(1000,mean=0,sd=1)
1 <abs(x)<2
1 <abs(x) & abs(x)<2
640*1.5
640*2
480*1.5
