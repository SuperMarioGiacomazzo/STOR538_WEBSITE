library(tidyverse)
library(readxl)
#Read in Actual Results
setwd("D:/Mario Documents/UNC/STOR 538/Not for Github/FA2020_PLAYOFF2")
Actual=read.csv("Actual.csv")
Actual$Spread=Actual$Home.Score-Actual$Visitor.Score
Actual$Total=Actual$Home.Score+Actual$Visitor.Score
Actual$Result=ifelse(Actual$Spread>0,1,0)
#Read in Predictions from Groups
setwd("D:/Mario Documents/UNC/STOR 538/Not for Github/FA2020_PLAYOFF2/Predictions")
group1=read.csv("Group_1.csv")
group2=read.csv("Group_2.csv")
group3=read_xlsx("Group_3.xlsx")
group4=read.csv("Group_4.csv")
group5=read.csv("Group_5.csv")
group6=read.csv("Group_6.csv")
group7=read.csv("Group_7.csv")
group8=read.csv("Group_8.csv")
group9=read.csv("Group_9.csv")
group10=read.csv("Group_10.csv")
group11=read.csv("Group_11.csv")
group12=read_xlsx("Group_12.xlsx")
group13=read_xlsx("Group_13.xlsx")
group14=read.csv("Group_14.csv")
#Modify Tables for Usage
Spread=tibble(Date=Actual$Date,Home=Actual$Home.Team,Away=Actual$Away.Team,Actual=Actual$Spread,
group1=group1$Spread,group2=group2$Spread,
group3=group3$Spread,group4=group4$Spread,
group5=group5$Spread,group6=group6$Spread,
group7=group7$Spread,group8=group8$Spread,
group9=group9$Spread,group10=group10$Spread,
group11=group11$Spread,group12=group12$Spread,
group13=group13$Spread,group14=group14$Spread)
Total=tibble(Date=Actual$Date,Home=Actual$Home.Team,Away=Actual$Away.Team,Actual=Actual$Total,
group1=group1$Total,group2=group2$Total,
group3=group3$Total,group4=group4$Total,
group5=group5$Total,group6=group6$Total,
group7=group7$Total,group8=group8$Total,
group9=group9$Total,group10=group10$Total,
group11=group11$Total,group12=group12$Total,
group13=group13$Total,group14=group14$Total)
Result=tibble(Date=Actual$Date,Home=Actual$Home.Team,Away=Actual$Away.Team,Actual=Actual$Result,
group1=group1$Result,group2=group2$Result,
group3=group3$Result,group4=group4$Result,
group5=group5$Result,group6=group6$Result,
group7=group7$Result,group8=group8$Result,
group9=group9$Result,group10=group10$Result,
group11=group11$Result,group12=group12$Result,
group13=group13$Result,group14=group14$Result)
Spread$group6=as.numeric(Spread$group6)
Spread$group13=as.numeric(Spread$group13)
#Functions for Evaluating Prediction Error
rmse.func=function(actual,predict){
return(sqrt(mean((actual-predict)^2,na.rm=T)))
}
mae.func=function(actual,predict){
return(mean(abs(actual-predict),na.rm=T))
}
acc.func=function(actual,predict){
return(mean(actual==predict,na.rm=T))
}
#Usage of Error Functions for Week 1
spread.final=apply(Spread[,c(5:18)],2,rmse.func,actual=Spread$Actual)
total.final=apply(Total[,5:18],2,mae.func,actual=Total$Actual)
result.final=apply(Result[,5:18],2,acc.func,actual=Result$Actual)
rmse.func(actual=Spread$Actual,predict=Spread$group1)
spread.order=rank(as.numeric(spread.final))
total.order=rank(as.numeric(total.final))
result.order=rank(-as.numeric(result.final),ties.method="min")
setwd("D:/Mario Documents/UNC/STOR 538/Not for Github/FA2020_PLAYOFF2")
write.csv(Spread,"ClassSpread.csv")
write.csv(Total,"ClassTotal.csv")
write.csv(Result,"ClassResult.csv")
setwd("D:/Mario Documents/UNC/STOR 538/STOR538_WEBSITE/Playoffs/Round 2")
write.csv(Spread,"PredictSpread.csv",row.names=F)
write.csv(Total,"PredictTotal.csv",row.names=F)
write.csv(Result,"PredictResult.csv",row.names=F)
spread.order
spread.final
total.final
total.order
total.order=rank(as.numeric(total.final))
total.order
total.final=apply(Total[,5:18],2,mae.func,actual=Total$Actual)
total.final
result.final
result.order
