install.packages("pander")
46/3
46/4
pred.runs.season=function(x){
y=x%*%c(-560,.63,0.71,1.26,1.49,0.35)
return(y)
}
pred.runs.season(c(1081,486.4,54,810.72,4359.879477))
pred.runs.season=function(x){
y=x%*%c(-560,.63,0.71,1.26,1.49,0.35)
return(y)
}
pred.runs.season(c(1,1081,486.4,54,810.72,4359.879477))
pred.runs.season(c(1,1081,486.4,54,810.72139,4359.879477))
pred.runs.season(c(1,1081,486.4,54,810.72139,4359.879477))*18.02
#Predicted Runs for Season
pred.runs.season=function(x){
y=x%*%c(-560,.632785531,0.70595,1.2637,1.4907414,0.34656338)
return(y)
}
pred.runs.season(c(1,1081,486.4,54,810.72139,4359.879477))
3828/4329
#Ichiro Added Runs
839-780
home.run.percent = 0.5
sample=runif(0,1)
sample=runif(1)
runs=0
home.run.percent = 0.5
n.Sim=10000
runs.result = rep(NA,n.Sim)
for(i in 1:n.Sim){
runs=0
outs=0
sample=runif(1)
while(outs<3){
if(sample<0.5){
outs=outs+1
}else{
runs=runs+1
}
}
runs.result[i]=runs
}
home.run.percent = 0.5
n.Sim=10000
runs.result = rep(NA,n.Sim)
for(i in 1:n.Sim){
runs=0
outs=0
while(outs<3){
sample=runif(1)
if(sample<0.5){
outs=outs+1
}else{
runs=runs+1
}
}
runs.result[i]=runs
}
HR.OUT.MC=function(home.run.percent,n.Sim){
runs.result = rep(NA,n.Sim)
for(i in 1:n.Sim){
runs=0
outs=0
while(outs<3){
sample=runif(1)
if(sample<home.run.percent){
outs=outs+1
}else{
runs=runs+1
}
}
runs.result[i]=runs
}
}
Player.5=HR.OUT.MC(0.5,10000)
histogram(Player.5)
hist(Player.5)
Player.5
Player.5=HR.OUT.MC(0.5,10000)
HR.OUT.MC=function(home.run.percent,n.Sim){
runs.result = rep(NA,n.Sim)
for(i in 1:n.Sim){
runs=0
outs=0
while(outs<3){
sample=runif(1)
if(sample<home.run.percent){
outs=outs+1
}else{
runs=runs+1
}
}
runs.result[i]=runs
}
}
Player.5=HR.OUT.MC(0.5,10000)
HR.OUT.MC=function(home.run.percent,n.Sim){
runs.result = rep(NA,n.Sim)
for(i in 1:n.Sim){
runs=0
outs=0
while(outs<3){
sample=runif(1)
if(sample<home.run.percent){
outs=outs+1
}else{
runs=runs+1
}
}
runs.result[i]=runs
}
return(runs.result)
}
Player.5=HR.OUT.MC(0.5,10000)
hist(Player.5)
Player.5=tibble(Player.5=Player.5)
library(tidyverse)
Player.5=tibble(Player.5=Player.5)
mean(Player.5)
Player.5=HR.OUT.MC(0.5,10000)
mean(Player.5)
Player.5=tibble(Player.5=Player.5)
head(Player.5)
Player.5=HR.OUT.MC(0.5,10000)
Player.5=tibble(R.per.I=Player.5,
R.per.G=Player.5*9)
head(Player.5)
ggplot(Player.5) +
geom_histogram(R.per.I)
ggplot(Player.5) +
geom_density(aes(x=R.per.I)) +
geom_vline(x=mean(Player.5$R.per.I))
ggplot(Player.5) +
geom_density(aes(x=R.per.I)) +
geom_vline(xintercept=mean(Player.5$R.per.I))
ggplot(Player.5) +
geom_line(aes(y=R.per.I)) +
geom_vline(xintercept=mean(Player.5$R.per.I))
ggplot(Player.5) +
geom_line(aes(y=R.per.I)) +
geom_vline(xintercept=mean(Player.5$R.per.I))
ggplot(Player.5) +
geom_line(aes(x=1:10000,y=R.per.I)) +
geom_hline(yintercept=mean(Player.5$R.per.I))
ggplot(Player.5) +
geom_line(aes(x=1:10000,y=R.per.I)) +
geom_hline(yintercept=mean(Player.5$R.per.I))
ggplot(Player.5) +
geom_density(aes(x=1:10000,y=R.per.I)) +
geom_hline(yintercept=mean(Player.5$R.per.I))
ggplot(Player.5) +
geom_density(aes(x=R.per.I)) +
geom_hline(yintercept=mean(Player.5$R.per.I))
ggplot(Player.5) +
geom_density(aes(x=R.per.I)) +
geom_vline(xintercept=mean(Player.5$R.per.I))
ggplot(Player.5) +
geom_histogram(aes(x=R.per.I)) +
geom_vline(xintercept=mean(Player.5$R.per.I))
mean(Player.5$R.per.I)
ggplot(Player.5) +
geom_histogram(aes(x=R.per.I),color="deepskyblue1") +
geom_vline(xintercept=mean(Player.5$R.per.I))
ggplot(Player.5) +
geom_histogram(aes(x=R.per.I),fill="deepskyblue1") +
geom_vline(xintercept=mean(Player.5$R.per.I))
ggplot(Player.5) +
geom_histogram(aes(x=R.per.I),fill="deepskyblue") +
geom_vline(xintercept=mean(Player.5$R.per.I))
ggplot(Player.5) +
geom_histogram(aes(x=R.per.I),fill="deepskyblue2") +
geom_vline(xintercept=mean(Player.5$R.per.I))
ggplot(Player.5) +
geom_histogram(aes(x=R.per.G),fill="deepskyblue2") +
geom_vline(xintercept=mean(Player.5$R.per.G))
ggplot(Player.5) +
geom_histogram(aes(x=R.per.I),fill="deepskyblue2") +
geom_vline(xintercept=mean(Player.5$R.per.I),size=2)
ggplot(Player.5) +
geom_histogram(aes(x=R.per.G),fill="deepskyblue2") +
geom_vline(xintercept=mean(Player.5$R.per.G),size=2)
ggplot(Player.5) +
geom_histogram(aes(x=R.per.I),fill="deepskyblue2") +
geom_vline(xintercept=mean(Player.5$R.per.I),size=2)+
ylab("Frequency")
ggplot(Player.5) +
geom_histogram(aes(x=R.per.G),fill="deepskyblue2") +
geom_vline(xintercept=mean(Player.5$R.per.G),size=2) +
ylab("Frequency")
ggplot(Player.5) +
geom_histogram(aes(x=R.per.I),fill="deepskyblue2") +
geom_vline(xintercept=mean(Player.5$R.per.I),size=2)+
ylab("Frequency")
ggplot(Player.5) +
geom_histogram(aes(x=R.per.I),fill="deepskyblue2") +
geom_vline(xintercept=mean(Player.5$R.per.I),size=2)+
ylab("Frequency") +
annotate("text", x = 15, y = 1500,
label = "paste(italic(R) ^ 2, \" = .75\")", parse = TRUE)
ggplot(Player.5) +
geom_histogram(aes(x=R.per.I),fill="deepskyblue2") +
geom_vline(xintercept=mean(Player.5$R.per.I),size=2)+
ylab("Frequency") +
annotate("text", x = 15, y = 1500,size=2,
label = "paste(italic(R) ^ 2, \" = .75\")", parse = TRUE)
ggplot(Player.5) +
geom_histogram(aes(x=R.per.I),fill="deepskyblue2") +
geom_vline(xintercept=mean(Player.5$R.per.I),size=2)+
ylab("Frequency") +
annotate("text", x = 15, y = 1500,size=18,
label = "paste(italic(R) ^ 2, \" = .75\")", parse = TRUE)
ggplot(Player.5) +
geom_histogram(aes(x=R.per.I),fill="deepskyblue2") +
geom_vline(xintercept=mean(Player.5$R.per.I),size=2)+
ylab("Frequency") +
annotate("text", x = 15, y = 1500,size=12,
label = "paste(italic(R) ^ 2, \" = .75\")", parse = TRUE)
ggplot(Player.5) +
geom_histogram(aes(x=R.per.I),fill="deepskyblue2") +
geom_vline(xintercept=mean(Player.5$R.per.I),size=2)+
ylab("Frequency") +
annotate("text", x = 15, y = 1500,size=8,
label = "paste(italic(R) ^ 2, \" = .75\")", parse = TRUE)
ggplot(Player.5) +
geom_histogram(aes(x=R.per.I),fill="deepskyblue2") +
geom_vline(xintercept=mean(Player.5$R.per.I),size=2)+
ylab("Frequency") + xlab("Runs Per Inning")
annotate("text", x = 15, y = 1500,size=8,
label = "paste("R/I=",mean(Player.5$R.per.I))", parse = TRUE)
annotate("text", x = 15, y = 1500,size=8,
label = "paste(R/I=,mean(Player.5$R.per.I))", parse = TRUE)
ggplot(Player.5) +
geom_histogram(aes(x=R.per.I),fill="deepskyblue2") +
geom_vline(xintercept=mean(Player.5$R.per.I),size=2)+
ylab("Frequency") + xlab("Runs Per Inning")+
annotate("text", x = 15, y = 1500,size=8,
label = "paste(R/I=,mean(Player.5$R.per.I))", parse = TRUE)
paste("R/I=",mean(Player.5$R.per.I))
ggplot(Player.5) +
geom_histogram(aes(x=R.per.I),fill="deepskyblue2") +
geom_vline(xintercept=mean(Player.5$R.per.I),size=2)+
ylab("Frequency") + xlab("Runs Per Inning")+
annotate("text", x = 15, y = 1500,size=8,
label = "paste("Runs/Inning=",mean(Player.5$R.per.I))", parse = TRUE)
ggplot(Player.5) +
geom_histogram(aes(x=R.per.I),fill="deepskyblue2") +
geom_vline(xintercept=mean(Player.5$R.per.I),size=2)+
ylab("Frequency") + xlab("Runs Per Inning")+
annotate("text", x = 15, y = 1500,size=8,
label = paste("Runs/Inning=",mean(Player.5$R.per.I)), parse = TRUE)
ggplot(Player.5) +
geom_histogram(aes(x=R.per.I),fill="deepskyblue2") +
geom_vline(xintercept=mean(Player.5$R.per.I),size=2)+
ylab("Frequency") + xlab("Runs Per Inning")+
annotate("text", x = 15, y = 1500,size=8,
label = paste("Runs/Inning",=,mean(Player.5$R.per.I)), parse = TRUE)
ggplot(Player.5) +
geom_histogram(aes(x=R.per.I),fill="deepskyblue2") +
geom_vline(xintercept=mean(Player.5$R.per.I),size=2)+
ylab("Frequency") + xlab("Runs Per Inning")+
annotate("text", x = 15, y = 1500,size=4,
label = paste("Runs/Inning",=,mean(Player.5$R.per.I)), parse = TRUE)
ggplot(Player.5) +
geom_histogram(aes(x=R.per.I),fill="deepskyblue2") +
geom_vline(xintercept=mean(Player.5$R.per.I),size=2)+
ylab("Frequency") + xlab("Runs Per Inning")+
annotate("text", x = 15, y = 1500,size=4,
label = paste("Runs/Inning",=,mean(Player.5$R.per.I)), parse = TRUE)
paste("Runs/Inning","=",mean(Player.5$R.per.I))
ggplot(Player.5) +
geom_histogram(aes(x=R.per.I),fill="deepskyblue2") +
geom_vline(xintercept=mean(Player.5$R.per.I),size=2)+
ylab("Frequency") + xlab("Runs Per Inning")+
annotate("text", x = 15, y = 1500,size=4,
label = paste("Runs/Inning","=",mean(Player.5$R.per.I)), parse = TRUE)
ggplot(Player.5) +
geom_histogram(aes(x=R.per.I),fill="deepskyblue2") +
geom_vline(xintercept=mean(Player.5$R.per.I),size=2)+
ylab("Frequency") + xlab("Runs Per Inning")+
annotate("text", x = 15, y = 1500,size=4,
label = "paste("Runs/Inning","=",mean(Player.5$R.per.I))", parse = TRUE)
ggplot(Player.5) +
geom_histogram(aes(x=R.per.I),fill="deepskyblue2") +
geom_vline(xintercept=mean(Player.5$R.per.I),size=2)+
ylab("Frequency") + xlab("Runs Per Inning")+
annotate("text", x = 15, y = 1500,size=4,
label = "paste("Runs/Inning","=",mean(Player.5$R.per.I))", parse = TRUE)
paste("Runs/Inning=",mean(Player.5$R.per.I))
ggplot(Player.5) +
geom_histogram(aes(x=R.per.I),fill="deepskyblue2") +
geom_vline(xintercept=mean(Player.5$R.per.I),size=2)+
ylab("Frequency") + xlab("Runs Per Inning")+
annotate("text", x = 15, y = 1500,size=4,
label = "paste("Runs/Inning=",mean(Player.5$R.per.I))", parse = TRUE)
ggplot(Player.5) +
geom_histogram(aes(x=R.per.I),fill="deepskyblue2") +
geom_vline(xintercept=mean(Player.5$R.per.I),size=2)+
ylab("Frequency") + xlab("Runs Per Inning")+
annotate("text", x = 15, y = 1500,size=4,
label = "paste("Runs/Inning=",mean(Player.5$R.per.I))")
paste("Runs/Inning=",mean(Player.5$R.per.I)
paste("Runs/Inning=",mean(Player.5$R.per.I))
paste("Runs/Inning=",mean(Player.5$R.per.I))
ggplot(Player.5) +
geom_histogram(aes(x=R.per.I),fill="deepskyblue2") +
geom_vline(xintercept=mean(Player.5$R.per.I),size=2)+
ylab("Frequency") + xlab("Runs Per Inning")+
annotate("text", x = 15, y = 1500,size=4,
label = paste("Runs/Inning=",mean(Player.5$R.per.I)))
ggplot(Player.5) +
geom_histogram(aes(x=R.per.I),fill="deepskyblue2") +
geom_vline(xintercept=mean(Player.5$R.per.I),size=2)+
ylab("Frequency") + xlab("Runs Per Inning")+
annotate("text", x = 15, y = 1500,size=4,
label = paste("Average Runs/Inning=",mean(Player.5$R.per.I)))
ggplot(Player.5) +
geom_histogram(aes(x=R.per.I),fill="deepskyblue2") +
geom_vline(xintercept=mean(Player.5$R.per.I),size=2)+
ylab("Frequency") + xlab("Runs Per Inning")+
annotate("text", x = 15, y = 1500,size=4,
label = paste("Average Runs/Inning=",mean(Player.5$R.per.I))) +
theme_classic()
ggplot(Player.5) +
geom_histogram(aes(x=R.per.G),fill="deepskyblue2") +
geom_vline(xintercept=mean(Player.5$R.per.G),size=2) +
ylab("Frequency") + xlab("Runs Per Game")+
annotate("text", x = 15, y = 1500,size=4,
label = paste("Average Runs/Game=",mean(Player.5$R.per.G))) +
theme_classic()
ggplot(Player.5) +
geom_histogram(aes(x=R.per.G),fill="deepskyblue2") +
geom_vline(xintercept=mean(Player.5$R.per.G),size=2) +
ylab("Frequency") + xlab("Runs Per Game")+
annotate("text", x = 9*15, y = 1500,size=4,
label = paste("Average Runs/Game=",mean(Player.5$R.per.G))) +
theme_classic()
ggplot(Player.5) +
geom_histogram(aes(x=R.per.I),fill="deepskyblue2") +
geom_vline(xintercept=mean(Player.5$R.per.I),size=2)+
ylab("Frequency") + xlab("Runs Per Inning")+
annotate("text", x = 15, y = 1500,size=4,
label = paste("Average Runs/Inning=",mean(Player.5$R.per.I))) +
theme_classic()
HR.OUT.MC=function(home.run.percent,n.Sim){
runs.result = rep(NA,n.Sim)
for(i in 1:n.Sim){
runs=0
outs=0
while(outs<3){
sample=runif(1)
if(sample>home.run.percent){
outs=outs+1
}else{
runs=runs+1
}
}
runs.result[i]=runs
}
return(runs.result)
}
HR.OUT.MC=function(home.run.percent,n.Sim){
runs.result = rep(NA,n.Sim)
for(i in 1:n.Sim){
runs=0
outs=0
while(outs<3){
sample=runif(1)
if(sample>home.run.percent){
outs=outs+1
}else{
runs=runs+1
}
}
runs.result[i]=runs
}
return(runs.result)
}
Player.75=HR.OUT.MC(0.75,10000)
Player.75=tibble(R.per.I=Player.75,
R.per.G=Player.75*9)
head(Player.75)
ggplot(Player.5) +
geom_histogram(aes(x=R.per.G),fill="deepskyblue2") +
geom_vline(xintercept=mean(Player.75$R.per.G),size=2) +
ylab("Frequency") + xlab("Runs Per Game")+
annotate("text", x = 9*15, y = 1500,size=4,
label = paste("Average Runs/Game=",mean(Player.75$R.per.G))) +
theme_classic()
ggplot(Player.75) +
geom_histogram(aes(x=R.per.G),fill="deepskyblue2") +
geom_vline(xintercept=mean(Player.75$R.per.G),size=2) +
ylab("Frequency") + xlab("Runs Per Game")+
annotate("text", x = 9*15, y = 1500,size=4,
label = paste("Average Runs/Game=",mean(Player.75$R.per.G))) +
theme_classic()
ggplot(Player.75) +
geom_histogram(aes(x=R.per.G),fill="deepskyblue2") +
geom_vline(xintercept=mean(Player.75$R.per.G),size=2) +
ylab("Frequency") + xlab("Runs Per Game")+
annotate("text", x = 300, y = 1500,size=4,
label = paste("Average Runs/Game=",mean(Player.75$R.per.G))) +
theme_classic()
ggplot(Player.75) +
geom_histogram(aes(x=R.per.G),fill="deepskyblue2") +
geom_vline(xintercept=mean(Player.75$R.per.G),size=2) +
ylab("Frequency") + xlab("Runs Per Game")+
annotate("text", x = 350, y = 1200,size=4,
label = paste("Average Runs/Game=",mean(Player.75$R.per.G))) +
theme_classic()
ggplot(Player.75) +
geom_histogram(aes(x=R.per.G),fill="deepskyblue2") +
geom_vline(xintercept=mean(Player.75$R.per.G),size=2) +
ylab("Frequency") + xlab("Runs Per Game")+
annotate("text", x = 350, y = 1200,size=4,
label = paste("Average Runs/Game=",mean(Player.75$R.per.G))) +
theme_classic()
9*22/72
setwd("D:/Mario Documents/UNC/STOR 390/STOR390_WEBSITE/Group Assignments")
library(tidyverse)
library(readxl)
#Read Rosters
Section=read_excel("Roster.xlsx")[,1]
#Function to Divide Sections into Groups
Group.select.func<-function(data,random.seed){
student.names=data$Name
set.seed(random.seed)
random.order=sample(1:length(student.names),replace=F)
group=tibble(Order=random.order,Name=student.names) %>%
arrange(Order) %>%
mutate(Group=rep(1:(length(student.names)%/%5+(length(student.names)%%5!=0)),
each=5,length=length(student.names))) %>%
select(-Order) %>%
arrange(Group)
return(group)
}
#######################################
#Selecting Groups for Game-Day Speeches
#######################################
#GS.1=Group.select.func(Section,216)
#write_csv(GS.1,path=str_c(getwd(),"/GS1 Group Assignments.csv"))
#GS.2=Group.select.func(Section,480)
#write_csv(GS.2,path=str_c(getwd(),"/GS2 Group Assignments.csv"))
P1.1=Group.select.func(Section,440)
write_csv(P.1,path=str_c(getwd(),"/P1 Group Assignments.csv"))
P.1=Group.select.func(Section,440)
write_csv(P.1,path=str_c(getwd(),"/P1 Group Assignments.csv"))
